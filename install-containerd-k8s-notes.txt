# setting up 

1) sudo apt update

# using containerd as CRI runtime:-

2) https://kubernetes.io/docs/setup/production-environment/container-runtimes/#containerd

   i) https://github.com/containerd/containerd/blob/main/docs/getting-started.md
	
		sudo wget https://github.com/containerd/containerd/releases/download/v1.7.0/containerd-1.7.0-linux-amd64.tar.gz
		sudo tar Cxzvf /usr/local containerd-1.7.0-linux-amd64.tar.gz

		If you intend to start containerd via systemd, you should also download the containerd.service unit file from 				https://raw.githubusercontent.com/containerd/containerd/main/containerd.service into /etc/systemd/system/containerd.service

		sudo systemctl daemon-reload
		sudo systemctl enable --now containerd       # sudo systemctl status containerd.service
		
		sudo wget https://github.com/opencontainers/runc/releases/download/v1.1.5/runc.amd64
		sudo install -m 755 runc.amd64 /usr/local/sbin/runc
		
		sudo wget https://github.com/containernetworking/plugins/releases/download/v1.2.0/cni-plugins-linux-amd64-v1.2.0.tgz
		sudo mkdir -p /opt/cni/bin
		sudo tar Cxzvf /opt/cni/bin cni-plugins-linux-amd64-v1.2.0.tgz


   ii) Return to https://kubernetes.io/docs/setup/production-environment/container-runtimes/#containerd    for few further steps



3) create this file if not already there (setting a default endpoint for cri to communicate with internet)

cat /etc/crictl.yaml (on all nodes)
runtime-endpoint: unix:///run/containerd/containerd.sock
  #image-endpoint: unix:///var/run/dockershim.sock
timeout: 2
debug: true
pull-image-on-create: false


-----------------

Next step is install K8s && after that execute the below mentioned commands to prevent getting the following error:
       [ERROR FileContent--proc-sys-net-bridge-bridge-nf-call-iptables]: /proc/sys/net/bridge/bridge-nf-call-iptables does not exist
       [ERROR FileContent--proc-sys-net-ipv4-ip_forward]: /proc/sys/net/ipv4/ip_forward contents are not set to 1

 sudo modprobe bridge
 echo "net.bridge.bridge-nf-call-iptables = 1" >> /etc/sysctl.conf
 sudo sysctl -p /etc/sysctl.conf
 sudo modprobe br_netfilter
 sysctl -p /etc/sysctl.conf
 echo 1 > /proc/sys/net/ipv4/ip_forward   # do this as sudo -i
 cat /proc/sys/net/ipv4/ip_forward

then do sudo -i && run "kubeadm init --pod-network-cidr=192.168.0.0/16"


# note that with flannel overlay, I have seen errors & it's not working. Hence use Calico as yur overlay network:
kubectl create -f https://raw.githubusercontent.com/projectcalico/calico/v3.25.1/manifests/tigera-operator.yaml
kubectl create -f https://raw.githubusercontent.com/projectcalico/calico/v3.25.1/manifests/custom-resources.yaml

# you can use "kubeadm reset" to restart the process of kubeadm init