apiVersion: extensions/v1beta1
kind: Ingress
metadata:
  name: {serviceName}-devtools
  namespace: {namespace}
  labels:
    devtools: {serviceName}-ingress
  annotations:
    kubernetes.io/ingress.class: traefik
    traefik.frontend.rule.type: PathPrefixStrip
spec:
  defaultBackend:          # DefaultBackend is the backend that should handle requests that don't match any rule
     < give some index.html for 400 page not found >
  rules:                   # A list of host rules used to configure the Ingress. If unspecified, or no rule matches, all traffic is sent to the default backend.  (rules is an array)
  - host: vrach20.ch.xcloud.comcast.com   # FQDN. 1. IPs are not allowed. Currently an IngressRuleValue can only apply to the IP in the Spec of the parent Ingress. 2. The `:` delimiter is not respected because ports are not allowed. Currently the port of an Ingress is implicitly :80 for http and :443 for https. Both these may change in the future. Incoming requests are matched against the host before the IngressRuleValue. If the host is unspecified, the Ingress routes all traffic based on the specified IngressRuleValue. Host can be "precise" which is a domain name without the terminating dot of a network host (e.g. "foo.bar.com") or "wildcard", which is a domain name prefixed with a single wildcard label (e.g. "*.foo.com"). The wildcard character '\*' must appear by itself as the first DNS label and matches only a single label. You cannot have a wildcard label by itself (e.g. Host == "*"). Requests will be matched against the Host field in the following way: 1. If Host is precise, the request matches this rule if the http host header is equal to Host. 2. If Host is a wildcard, then the request matches this rule if the http host header is to equal to the suffix (removing the first label) of the wildcard rule.
    http:                  # HTTPIngressRuleValue is a list of http selectors pointing to backends.
      paths:               # A collection of paths that map requests to backends.  (paths is an array)
      - backend:           # Backend defines the referenced service endpoint to which the traffic will be forwarded to.
          service:          # Service references a Service as a Backend. This is a mutually exclusive setting with "Resource"
            name:          # {serviceName}. The service must exist in the same namespace as the Ingress object.  THIS IS HOW INGRESS IS CONNECTED TO THE SERVER & HENCE TO THE PODS
            port:          # {servicePort}. A port name or port number is required for a IngressServiceBackend.
              number:      # Number is the numerical port number
        path:                   # Path is matched against the path of an incoming request. Paths must begin with a '/' and must be present when using PathType with value "Exact" or "Prefix".
        pathType:      # PathType can be one of the following values: Exact: Matches the URL path exactly. Prefix: Matches based on a URL path prefix split by '/'.  (e.g. /foo/bar matches /foo/bar/baz, but does not match /foo/barbaz).
   
  - host: *.vrach20.ch.xcloud.comcast.com                     # you can have multiple rules
    http: