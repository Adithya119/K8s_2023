
eksctl create cluster --name k8s-cluster --version 1.21 --region ap-south-1 \
--nodegroup-name ng-adi2111 --node-volume-size 10 --managed \
--instance-types=t2.micro

    because       --node-volume-size ----> defaults to 80 Gi



it created a managed nodegroup with 2 nodes automatically

-----

eksctl delete cluster --name k8s-cluster --region ap-south-1

----------------

ubuntu@ip-172-31-0-101:~$ kubectl get pvc
Kubeconfig user entry is using deprecated API version client.authentication.k8s.io/v1alpha1. Run 'aws eks update-kubeconfig' to update.
NAME          STATUS   VOLUME                                     CAPACITY   ACCESS MODES   STORAGECLASS   AGE
mysql-claim   Bound    pvc-08b9246c-ae88-40ea-a847-1fcc22d9904e   1Gi        RWO            gp2            29m


this VOLUME will be persisted even after the deployment/rs gets deleted.

create a new deployment/rs with this volume as pvc & you'll see the old data


------------------------------------------------------------------------------------------------------------

ubuntu@ip-172-31-0-101:~$ eksctl create cluster --help
Create a cluster

Usage: eksctl create cluster [flags]

General flags:
  -n, --name string           EKS cluster name (generated if unspecified, e.g. "wonderful-party-1653222291")
      --tags stringToString   Used to tag the AWS resources. List of comma separated KV pairs "k1=v1,k2=v2" (default [])
  -r, --region string         AWS region. Defaults to the value set in your AWS config (~/.aws/config)
      --with-oidc             Enable the IAM OIDC provider
      --zones strings         (auto-select if unspecified)
      --version string        Kubernetes version (valid options: 1.19, 1.20, 1.21, 1.22) (default "1.22")
  -f, --config-file string    load configuration from a file (or stdin if set to '-')
      --timeout duration      maximum waiting time for any long-running operation (default 25m0s)
      --fargate               Create a Fargate profile scheduling pods in the default and kube-system namespaces onto Fargate
      --dry-run               Dry-run mode that skips cluster creation and outputs a ClusterConfig

Initial nodegroup flags:
      --nodegroup-name string          name of the nodegroup (generated if unspecified, e.g. "ng-809389f7")
      --without-nodegroup              if set, initial nodegroup will not be created
  -t, --node-type string               node instance type
  -N, --nodes int                      total number of nodes (for a static ASG) (default 2)
  -m, --nodes-min int                  minimum nodes in ASG (default 2)
  -M, --nodes-max int                  maximum nodes in ASG (default 2)
      --node-volume-size int           node volume size in GB (default 80)
      --node-volume-type string        node volume type (valid options: gp2, gp3, io1, sc1, st1) (default "gp3")
      --max-pods-per-node int          maximum number of pods per node (set automatically if unspecified)
      --ssh-access                     control SSH access for nodes. Uses ~/.ssh/id_rsa.pub as default key path if enabled
      --ssh-public-key string          SSH public key to use for nodes (import from local path, or use existing EC2 key pair)
      --enable-ssm                     Enable AWS Systems Manager (SSM)
      --node-ami string                'auto-ssm', 'auto' or an AMI ID (advanced use)
      --node-ami-family string         'AmazonLinux2' for the Amazon EKS optimized AMI, or use 'Ubuntu2004' or 'Ubuntu1804' for the official Canonical EKS AMIs (default "AmazonLinux2")
  -P, --node-private-networking        whether to make nodegroup networking private
      --node-security-groups strings   attach additional security groups to nodes
      --node-labels stringToString     extra labels to add when registering the nodes in the nodegroup. List of comma separated KV pairs "k1=v1,k2=v2" (default [])
      --node-zones strings             (inherited from the cluster if unspecified)
      --instance-prefix string         add a prefix value in front of the instance's name
      --instance-name string           overrides the default instance's name
      --disable-pod-imds               Blocks IMDS requests from non-host networking pods
      --managed                        Create EKS-managed nodegroup (default true)
      --spot                           Create a spot nodegroup (managed nodegroups only)
      --instance-types strings         Comma-separated list of instance types (e.g., --instance-types=c3.large,c4.large,c5.large

----